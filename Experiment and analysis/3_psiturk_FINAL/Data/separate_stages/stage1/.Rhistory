i=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4.csv', header = TRUE, sep=',',stringsAsFactors=F)
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, paths$complete == 'True')
d=merge(paths,i,by = 'instance')
d$err <- (d$human_length-d$optimal_length)
d$err_norm <- (d$err)/d$optimal_length
d$err_ratio <- (d$human_length/d$optimal_length)
f<-function(d,name){
g1<-ggplot(d, aes_string(x=name, y=d$err)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)
g2<-ggplot(d, aes_string(x=name, y=d$err_norm)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)
g3<-ggplot(d, aes_string(x=name, y=d$err_ratio)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)
g4<-ggplot(d, aes_string(x=name, y=d$rt)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)
grid.arrange(g1,g2,g3,g4)
}
ggplot(d, aes(x=d$avg_bf, y=d$err)) + stat_smooth(method = 'lm', formula = d$err ~ d$avg_bf)
sl=split(d,as.factor(d$optimal_length))
i=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4.csv', header = TRUE, sep=',',stringsAsFactors=F)
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, paths$complete == 'True')
d=merge(paths,i,by = 'instance')
d$err_norm <- (d$human_length-d$optimal_length)/d$optimal_length
d$err <- (d$human_length-d$optimal_length)
d=d[,c('optimal_length','human_length','rt','v_size', 'mag_nodes',
'mag_edges','path_length','num_sccs','max_scc_size','avg_bf','avg_location_size')]
cormat=round(cor(d,method = "spearman"),3)
library('reshape2')
melted=melt(cormat)
melted=subset(melted, melted$Var2 %in% c('err','err_norm','rt'))
ggplot(melted, aes(x=melted$Var1, y=melted$Var2, fill=melted$value)) + geom_tile()+ geom_text(label = melted$value)
i=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4.csv', header = TRUE, sep=',',stringsAsFactors=F)
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, paths$complete == 'True')
d=merge(paths,i,by = 'instance')
d$err_norm <- (d$human_length-d$optimal_length)/d$optimal_length
d$err <- (d$human_length-d$optimal_length)
d=d[,c('optimal_length','human_length','rt','err','err_norm','v_size', 'mag_nodes',
'mag_edges','path_length','num_sccs','max_scc_size','avg_bf','avg_location_size')]
cormat=round(cor(d,method = "spearman"),3)
library('reshape2')
melted=melt(cormat)
melted=subset(melted, melted$Var2 %in% c('err','err_norm','rt'))
ggplot(melted, aes(x=melted$Var1, y=melted$Var2, fill=melted$value)) + geom_tile()+ geom_text(label = melted$value)
i=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4.csv', header = TRUE, sep=',',stringsAsFactors=F)
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, paths$complete == 'True')
d=merge(paths,i,by = 'instance')
d$err <- (d$human_length-d$optimal_length)
d$err_norm <- (d$err)/d$optimal_length
d$err_ratio <- (d$human_length/d$optimal_length)
f<-function(d,name){
g1<-ggplot(d, aes_string(x=name, y=d$err)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)
g2<-ggplot(d, aes_string(x=name, y=d$err_norm)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)
g3<-ggplot(d, aes_string(x=name, y=d$err_ratio)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)
g4<-ggplot(d, aes_string(x=name, y=d$rt)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)
grid.arrange(g1,g2,g3,g4)
}
sl=split(d,as.factor(d$optimal_length))
f(sl$`7`,'avg_bf')
f<-function(d,name){
g1<-ggplot(d, aes_string(x=name, y=d$err)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem) + ggtitle('err')
g2<-ggplot(d, aes_string(x=name, y=d$err_norm)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)
g3<-ggplot(d, aes_string(x=name, y=d$err_ratio)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)
g4<-ggplot(d, aes_string(x=name, y=d$rt)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)
grid.arrange(g1,g2,g3,g4)
}
f(sl$`7`,'avg_bf')
g1<-ggplot(d, aes_string(x=name, y=d$err)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem) + ggtitle('err') + ylab('')
f<-function(d,name){
g1<-ggplot(d, aes_string(x=name, y=d$err)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem) + ggtitle('err') + ylab('')
g2<-ggplot(d, aes_string(x=name, y=d$err_norm)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)+ ggtitle('err_norm')
g3<-ggplot(d, aes_string(x=name, y=d$err_ratio)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)+ ggtitle('err_ratio')
g4<-ggplot(d, aes_string(x=name, y=d$rt)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)+ ggtitle('rt')
grid.arrange(g1,g2,g3,g4)
}
f(sl$`7`,'avg_bf')
f<-function(d,name){
g1<-ggplot(d, aes_string(x=name, y=d$err)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem) + ggtitle('err') + ylab('')
g2<-ggplot(d, aes_string(x=name, y=d$err_norm)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)+ ggtitle('err_norm')+ ylab('')
g3<-ggplot(d, aes_string(x=name, y=d$err_ratio)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)+ ggtitle('err_ratio')+ ylab('')
g4<-ggplot(d, aes_string(x=name, y=d$rt)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)+ ggtitle('rt')+ ylab('')
grid.arrange(g1,g2,g3,g4)
}
f(sl$`7`,'avg_bf')
setwd('~/gdrivezb9/rushhour/results/stage4/')
d=read.csv('trial_event_data.csv', header = TRUE, sep=',',stringsAsFactors=F)
d=subset(d,d$assignmentid %in% c('3YW4XOSQKRTI0K0Z2YPDTDJVFABU1I','3M0BCWMB8W4W5M7WZVX3HDH1M3FBWL','3TS1AR6UQRM7SOIBWPBN8N9589Y7FV'))
d=subset(d, d$event != 'drag_start')
make_plot <- function (d){
start_time = d[1,c('time')]
one_hour = start_time + 60*60*1000
two_hour = start_time + 120*60*1000
g<-ggplot(d, aes(x=d$time, y=d$event)) + geom_point() + geom_vline(xintercept = one_hour,linetype=2) +
ggtitle(d[1,c('subject')])+
geom_vline(xintercept = two_hour, linetype=1) +
annotate("text", x = one_hour, y = 3.5, label = "60m") +
annotate("rect", xmin = one_hour-50, xmax = one_hour+50, ymin = 3.2, ymax = 3.8,alpha = .9) +
annotate("text", x = two_hour, y = 3.5, label = "120m") + xlab('Time') +
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())
return(g)
}
d_worker = split(d, d$subject)
slplots=lapply(d_worker, make_plot)
do.call('grid.arrange',c(slplots, ncol = 2))
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
d=subset(paths, paths$complete=='True')
d$instance=factor(d$instance, levels = lvls_sl)
ggplot(d, aes(x=d$optimal_length))+ geom_point(stroke=2,aes(y=d$human_length, shape=d$subject))+
scale_shape_manual(values = 1:25, guide=FALSE)+
xlab('Optimal solution') + ylab('Human solution')
i=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4.csv', header = TRUE, sep=',',stringsAsFactors=F)
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, paths$complete == 'True')
d=merge(paths,i,by = 'instance')
d$err_norm <- (d$human_length-d$optimal_length)/d$optimal_length
d$err <- (d$human_length-d$optimal_length)
?cor
i=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4.csv', header = TRUE, sep=',',stringsAsFactors=F)
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, paths$complete == 'True')
d=merge(paths,i,by = 'instance')
d$err_norm <- (d$human_length-d$optimal_length)/d$optimal_length
d$err <- (d$human_length-d$optimal_length)
d=d[,c('optimal_length','human_length','rt','err','err_norm','v_size', 'mag_nodes',
'mag_edges','path_length','num_sccs','max_scc_size','avg_bf','avg_location_size')]
cor.test(d)
i=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4.csv', header = TRUE, sep=',',stringsAsFactors=F)
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, paths$complete == 'True')
d=merge(paths,i,by = 'instance')
d$err_norm <- (d$human_length-d$optimal_length)/d$optimal_length
d$err <- (d$human_length-d$optimal_length)
d=d[,c('optimal_length','human_length','rt','err','err_norm','v_size', 'mag_nodes',
'mag_edges','path_length','num_sccs','max_scc_size','avg_bf','avg_location_size')]
cormat=round(cor(d,method = "spearman"),3)
library('reshape2')
melted=melt(cormat)
melted=subset(melted, melted$Var2 %in% c('err','err_norm','rt'))
ggplot(melted, aes(x=melted$Var1, y=melted$Var2, fill=melted$value)) + geom_tile()+ geom_text(label = melted$value)
cor.test(d$mag_edges, d$d$err)
cor.test(d$mag_edges, d$err)
names(d)
dapply
?dapply
?ddply
names(d)
melt(d)
k=melt(d)
names(d)
i=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4.csv', header = TRUE, sep=',',stringsAsFactors=F)
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, paths$complete == 'True')
d=merge(paths,i,by = 'instance')
d$err_norm <- (d$human_length-d$optimal_length)/d$optimal_length
d$err <- (d$human_length-d$optimal_length)
names(d)
melt(d,id.vars = c('instance','subject','trial_number'))
k=melt(d,id.vars = c('instance','subject','trial_number'))
head(k)
i=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4.csv', header = TRUE, sep=',',stringsAsFactors=F)
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, paths$complete == 'True')
d=merge(paths,i,by = 'instance')
d$err_norm <- (d$human_length-d$optimal_length)/d$optimal_length
d$err <- (d$human_length-d$optimal_length)
names(d)
cor.test(d$mag_edges, d$err)
cor.test(d$mag_edges, d$err, method = "spearman")
cor.test(d$mag_edges, d$err, method = "spearman")
names(cor.test(d$mag_edges, d$err, method = "spearman"))
cor.test(d$mag_edges, d$err, method = "spearman")$p.value
plot(cor.test(d$mag_edges, d$err, method = "spearman"))
cor.test(d$mag_edges, d$err, method = "spearman")$p.value
cor.test(d$mag_nodes, d$err, method = "spearman")$p.value
cor.test(d$max_scc_size, d$err, method = "spearman")$p.value
cor.test(d$num_sccs, d$err, method = "spearman")$p.value
cor.test(d$num_sccs, d$err, method = "spearman")$p.value + 1
lm(d$mag_edges ~ d$err)
lm(d$err ~ d$err)
lm(d$err ~ d$mag_edges)
summary(lm(d$err ~ d$mag_edges))
summary(lm(d$err ~ d$mag_edges + d$mag_nodes))
summary(lm(d$err ~ d$mag_edges + d$mag_nodes + d$avg_location_size + d$avg_bf))
plot(lm(d$err ~ d$mag_edges + d$mag_nodes + d$avg_location_size + d$avg_bf))
ggplot(d, aes_string(x=name, y=d$err)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem) + ggtitle('err') + ylab('')
ggplot(d, aes_string(x='avg_bf', y=d$err)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem) + ggtitle('err') + ylab('')
ggplot(d, aes_string(x='avg_bf', y=d$err)) + geom_point() + stat_smooth(method = 'lm',formula = d$err ~ d$avg_bf) + stat_summary(color='red', fun.data = mean_sem) + ggtitle('err') + ylab('')
i=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4.csv', header = TRUE, sep=',',stringsAsFactors=F)
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, paths$complete == 'True')
d=merge(paths,i,by = 'instance')
d$err_norm <- (d$human_length-d$optimal_length)/d$optimal_length
d$err <- (d$human_length-d$optimal_length)
i=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4.csv', header = TRUE, sep=',',stringsAsFactors=F)
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, paths$complete == 'True')
d=merge(paths,i,by = 'instance')
d$err_norm <- (d$human_length-d$optimal_length)/d$optimal_length
d$err <- (d$human_length-d$optimal_length)
d=d[,c('optimal_length','human_length','rt','err','err_norm','v_size', 'mag_nodes',
'mag_edges','num_sccs','max_scc_size','avg_bf','avg_location_size')]
cormat=round(cor(d,method = "spearman"),3)
names(cormat)
library('reshape2')
melted=melt(cormat)
names(melted)
head(melted)
cor.test(d$optimal_length,d$v_size)
d[,factors[1]]
factors<-c('v_size', 'mag_nodes','mag_edges','num_sccs','max_scc_size','avg_bf','avg_location_size')
responses<-c('optimal_length','human_length','rt','err','err_norm')
d[,factors[1]]
d[,factors[2]]
d[,factors[4]]
d[,factors[4]]
d[,responses[1]]
cor.test(d[,factors[4]],d[,responses[1]])
??cartesian
expand.grid
expand.grid(factors,responses)
d=expand.grid(factors,responses)
names(d)
i=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4.csv', header = TRUE, sep=',',stringsAsFactors=F)
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, paths$complete == 'True')
d=merge(paths,i,by = 'instance')
d$err_norm <- (d$human_length-d$optimal_length)/d$optimal_length
d$err <- (d$human_length-d$optimal_length)
factors<-c('v_size', 'mag_nodes','mag_edges','num_sccs','max_scc_size','avg_bf','avg_location_size')
responses<-c('optimal_length','human_length','rt','err','err_norm')
k=expand.grid(factors,responses)
cor.test(d[,k$Var1],d[,k$Var2])
d[,k$Var1]
?apply
apply(k,1,paste(Var1,Var2))
k=expand.grid(factors,responses)
apply(k,1,function(x){paste(x$Var1,x$Var2)})
apply(k,1,function(x){paste(x[1],x[2]])})
apply(k,1,function(x){paste(x[1],x[2])})
apply(k,1,function(x){paste(x[1],x[2],sep=":")})
apply(k,1,function(x){cor.test(d[,x[1]],d[,x[2]])$pvalue})
apply(k,1,function(x){cor.test(d[,x[1]],d[,x[2]])})
cor.test(d$optimal_length,d$mag_nodes)
names(cor.test(d$optimal_length,d$mag_nodes))
apply(k,1,function(x){cor.test(d[,x[1]],d[,x[2]])$p.value})
k=expand.grid(factors,responses)
k$pval=apply(k,1,function(x){cor.test(d[,x[1]],d[,x[2]])$p.value})
head(k)
cor.test(d$v_size,d$optimal_length)$p.val
cor.test(d$num_sccs,d$optimal_length)$p.val
k$pval=apply(k,1,function(x){cor.test(d[,x[1]],d[,x[2]], method = "spearman")$p.value})
head(k)
?cor.test
k$estimate=apply(k,1,function(x){cor.test(d[,x[1]],d[,x[2]], method = "spearman")$estimate})
head(k)
i=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4.csv', header = TRUE, sep=',',stringsAsFactors=F)
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, paths$complete == 'True')
d=merge(paths,i,by = 'instance')
d$err_norm <- (d$human_length-d$optimal_length)/d$optimal_length
d$err <- (d$human_length-d$optimal_length)
factors<-c('v_size', 'mag_nodes','mag_edges','num_sccs','max_scc_size','avg_bf','avg_location_size')
responses<-c('optimal_length','human_length','rt','err','err_norm')
k=expand.grid(factors,responses)
k$pval=apply(k,1,function(x){cor.test(d[,x[1]],d[,x[2]], method = "spearman", alternative = "two.sided")$p.value})
k$estimate=apply(k,1,function(x){cor.test(d[,x[1]],d[,x[2]], method = "spearman", alternative = "two.sided")$estimate})
head(k)
k
ggplot(d, aes_string(x=name, y=d$err)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem) + ggtitle('err') + ylab('')
ggplot(d, aes_string(x=d$mag_edges, y=d$err)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)
ggplot(d, aes(x=d$mag_edges, y=d$err)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)
ggplot(d, aes(x=d$mag_edges, y=d$err)) + geom_point() + stat_smooth(method = 'lm')
?stat_smooth
names(d)
d$err_ratio <- d$human_length/d$optimal_length
head(d$err_ratio)
fit<-lm(err_ratio ~ mag_nodes + max_scc_size + mag_edges + avg_bf +avg_location_size + num_sccs)
fit<-lm(err_ratio ~ mag_nodes + max_scc_size + mag_edges + avg_bf +avg_location_size + num_sccs, data = d)
summary(fit)
fit<-lm(err_ratio ~ mag_nodes , data = d)
summary(fit)
fit<-lm(err_ratio ~ mag_nodes + max_scc_size + mag_edges + avg_bf +avg_location_size + num_sccs, data = d)
summary(fit)
AIC(fit)
fit<-lm(err_ratio ~ mag_nodes +  mag_edges, data = d)
summary(fit)
fit<-lm(err_ratio ~ mag_edges, data = d)
summary(fit)
fit<-lm(err_ratio ~ mag_edges + num_sccs, data = d)
summary(fit)
fit<-lm(err_ratio ~ mag_edges + max_scc_size, data = d)
summary(fit)
fit<-lm(err_ratio ~ mag_edges + avg_bf, data = d)
summary(fit)
fit<-lm(err_ratio ~ mag_edges + avg_location_size, data = d)
summary(fit)
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths$status<-factor(with(paths, ifelse(paths$skipped,'Surrender',ifelse(paths$complete,ifelse(paths$trial_number=='0','Solved','Restart'),'NA')))
,levels = rev(c('Solved','Restart','Surrender')))
paths$instance=factor(paths$instance, levels = lvls_e,labels = 1:length(lvls_e))
g<-ggplot(paths, aes(x=paths$instance, na.rm=T)) + geom_bar(aes(fill=status)) + xlab('puzzle') + ylab('#subejcts')+
scale_y_continuous(breaks=1:length(unique(paths$subject)))+
scale_fill_manual(values = c('darkred','darkorange','darkgreen'))+
theme(legend.position = c(0.8,0.7), text = element_text(size=20))+
theme(legend.text = element_text(size=14), legend.key.height = unit(0.4,'cm'),legend.key.width = unit(0.4,'cm') )
g
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths$status<-factor(with(paths, ifelse(paths$skipped,'Surrender',ifelse(paths$complete,ifelse(paths$trial_number=='0','Solved','Restart'),'NA')))
,levels = rev(c('Solved','Restart','Surrender')))
paths=subset(paths,status!= 'NA' & instance !='Jam-25')
paths$instance=factor(paths$instance, levels = lvls_e,labels = 1:length(lvls_e))
g<-ggplot(paths, aes(x=paths$instance, na.rm=T)) + geom_bar(aes(fill=status)) + xlab('puzzle') + ylab('#subejcts')+
scale_y_continuous(breaks=1:length(unique(paths$subject)))+
scale_fill_manual(values = c('darkred','darkorange','darkgreen'))+
theme(legend.position = c(0.8,0.7), text = element_text(size=20))+
theme(legend.text = element_text(size=14), legend.key.height = unit(0.4,'cm'),legend.key.width = unit(0.4,'cm') )
g
names(d)
d$subject
table(d$subject)
length(unique(d$subject))
aggregate(d, by = d$subject, FUN = nrow)
aggregate(d, by = as.list(d$subject), FUN = nrow)
aggregate(d, by = as.list(d$subject), FUN = length)
aggregate(d, by = list(d$subject), FUN = length)
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths$status<-factor(with(paths, ifelse(paths$skipped,'Surrender',ifelse(paths$complete,ifelse(paths$trial_number=='0','Solved','Restart'),'NA')))
,levels = rev(c('Solved','Restart','Surrender')))
paths=subset(paths,status!= 'NA' & instance !='Jam-25')
aggregate(paths, by = list(paths$subject, paths$status), FUN = length)
aggregate(paths , by = list('subject'=paths$subject, 'status'=paths$status))
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths$status<-factor(with(paths, ifelse(paths$skipped,'Surrender',ifelse(paths$complete,ifelse(paths$trial_number=='0','Solved','Restart'),'NA')))
,levels = rev(c('Solved','Restart','Surrender')))
paths=subset(paths,status!= 'NA' & instance !='Jam-25')
k=aggregate(paths , by = list('subject'=paths$subject, 'status'=paths$status), FUN = 'length')
k=aggregate(paths , by = list('subject'=paths$subject, 'status'=paths$status), FUN = 'length')
k
k=k[,c('subject','status','instance')]
k
names(k)<-c('subject','status','value')
head(k)
rep(1:3,times = 3)
d[order(d$subject),]
k[order(k$subject),]
ggplot(k, aes(x=k$subject)) + geom_bar()
ggplot(k, aes(x=k$subject)) + geom_bar(aes(fill=status)
)
head(paths)
g<-ggplot(paths, aes(x=paths$subject, na.rm=T)) + geom_bar(aes(fill=status)) + xlab('puzzle') + ylab('#subejcts')+
scale_y_continuous(breaks=1:length(unique(paths$instance)))+
scale_fill_manual(values = c('darkred','darkorange','darkgreen'))+
theme(legend.position = c(0.8,0.7), text = element_text(size=20))+
theme(legend.text = element_text(size=14), legend.key.height = unit(0.4,'cm'),legend.key.width = unit(0.4,'cm') )
g
k
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, complete=='True')
paths=subset(paths, subject='A191V7PT3DQKDP:3PMBY0YE28B43VMUKKJ6EDF85RV9C8')
paths$instance=factor(paths$instance, levels = lvls_e, labels = 1:length(lvls_e))
g<-ggplot(paths, aes(x = paths$instance)) +
stat_summary(geom='bar', aes(y=paths$human_length), fun.y = 'mean', fill='wheat4')+
stat_summary(geom='bar', aes(y=paths$optimal_length+1), fun.y = 'mean', fill='black')+
stat_summary(geom='errorbar', aes(y=paths$human_length), fun.data = mean_sem, width=0.4)+
xlab('puzzle') + ylab('#moves') + theme(text = element_text(size=20))
g
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, complete=='True')
paths=subset(paths, subject='A191V7PT3DQKDP:3PMBY0YE28B43VMUKKJ6EDF85RV9C8')
names(paths)
unique(paths$subject)
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, complete=='True')
paths=subset(paths, subject=='A191V7PT3DQKDP:3PMBY0YE28B43VMUKKJ6EDF85RV9C8')
paths$instance=factor(paths$instance, levels = lvls_e, labels = 1:length(lvls_e))
g<-ggplot(paths, aes(x = paths$instance)) +
stat_summary(geom='bar', aes(y=paths$human_length), fun.y = 'mean', fill='wheat4')+
stat_summary(geom='bar', aes(y=paths$optimal_length+1), fun.y = 'mean', fill='black')+
stat_summary(geom='errorbar', aes(y=paths$human_length), fun.data = mean_sem, width=0.4)+
xlab('puzzle') + ylab('#moves') + theme(text = element_text(size=20))
g
setwd('~/gdrivezb9/rushhour/results/stage5/')
d=read.csv('trial_event_data.csv', header = TRUE, sep=',',stringsAsFactors=F)
d=subset(d, d$event != 'drag_start')
make_plot <- function (d){
start_time = d[1,c('time')]
one_hour = start_time + 60*60*1000
two_hour = start_time + 120*60*1000
g<-ggplot(d, aes(x=d$time, y=d$event)) + geom_point() + geom_vline(xintercept = one_hour,linetype=2) +
ggtitle(d[1,c('subject')])+
geom_vline(xintercept = two_hour, linetype=1) +
annotate("text", x = one_hour, y = 3.5, label = "60m") +
annotate("rect", xmin = one_hour-50, xmax = one_hour+50, ymin = 3.2, ymax = 3.8,alpha = .9) +
annotate("text", x = two_hour, y = 3.5, label = "120m") + xlab('Time') +
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())
return(g)
}
d_worker = split(d, d$subject)
slplots=lapply(d_worker, make_plot)
do.call('grid.arrange',c(slplots, ncol = 2))
setwd('~/gdrivezb9/rushhour/results/stage5/')
d=read.csv('trial_event_data.csv', header = TRUE, sep=',',stringsAsFactors=F)
d=subset(d, d$event != 'drag_start')
make_plot <- function (d){
start_time = d[1,c('time')]
one_hour = start_time + 60*60*1000
two_hour = start_time + 120*60*1000
g<-ggplot(d, aes(x=d$time, y=d$event)) + geom_point() + geom_vline(xintercept = one_hour,linetype=2) +
ggtitle(d[1,c('subject')])+
geom_vline(xintercept = two_hour, linetype=1) +
annotate("text", x = one_hour, y = 3.5, label = "60m") +
annotate("rect", xmin = one_hour-50, xmax = one_hour+50, ymin = 3.2, ymax = 3.8,alpha = .9) +
annotate("text", x = two_hour, y = 3.5, label = "120m") + xlab('Time') +
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())
return(g)
}
d_worker = split(d, d$subject)
slplots=lapply(d_worker, make_plot)
do.call('grid.arrange',c(slplots, ncol = 2))
setwd('~/gdrivezb9/rushhour/results/stage5/')
d=read.csv('trial_event_data.csv', header = TRUE, sep=',',stringsAsFactors=F)
names(d)
subset(d, d$subject=='A13BZCNJ0WR1T7')
subset(d, d$subject=='A13BZCNJ0WR1T7')$instance
unique(subset(d, d$subject=='A13BZCNJ0WR1T7')$instance)
length(unique(subset(d, d$subject=='A13BZCNJ0WR1T7')$instance))
setwd('~/gdrivezb9/rushhour/results/stage3/')
d=read.csv('trial_event_data.csv', header = TRUE, sep=',',stringsAsFactors=F)
d=subset(d, d$event != 'drag_start')
wins=ddply(d, .(subject), function(x){return(length(unique(x[which(x$event=='win'),c('instance')])))})
names(wins)<-c('subject','solved')
surrenders=ddply(d, .(subject), function(x){return(length(unique(x[which(x$event=='surrender'),c('instance')])))})
names(surrenders)<-c('subject','surrendered')
fun<-function(x){
df=data.frame(nrow(x[which(x$event=='BONUS_FAIL'),]),nrow(x[which(x$event=='BONUS_SUCCESS'),]))
names(df)<-c('BONUS_FAIL','BONUS_SUCCESS')
return(df)
}
bonuses=ddply(d, .(subject), fun)
commands=ddply(d, .(subject), function(x){return(paste('worker approve',x$assignmentid[1]))})
names(commands)<-c('subject','approve_command')
merge(merge(merge(bonuses,wins),surrenders),commands)
setwd('~/gdrivezb9/rushhour/results/stage5/')
d=read.csv('trial_event_data.csv', header = TRUE, sep=',',stringsAsFactors=F)
d=subset(d, d$event != 'drag_start')
wins=ddply(d, .(subject), function(x){return(length(unique(x[which(x$event=='win'),c('instance')])))})
names(wins)<-c('subject','solved')
surrenders=ddply(d, .(subject), function(x){return(length(unique(x[which(x$event=='surrender'),c('instance')])))})
names(surrenders)<-c('subject','surrendered')
fun<-function(x){
df=data.frame(nrow(x[which(x$event=='BONUS_FAIL'),]),nrow(x[which(x$event=='BONUS_SUCCESS'),]))
names(df)<-c('BONUS_FAIL','BONUS_SUCCESS')
return(df)
}
bonuses=ddply(d, .(subject), fun)
commands=ddply(d, .(subject), function(x){return(paste('worker approve',x$assignmentid[1]))})
names(commands)<-c('subject','approve_command')
merge(merge(merge(bonuses,wins),surrenders),commands)
setwd('~/gdrivezb9/rushhour/results/stage3/')
d=read.csv('trial_event_data.csv', header = TRUE, sep=',',stringsAsFactors=F)
d=subset(d, d$event != 'drag_start')
make_plot <- function (d){
start_time = d[1,c('time')]
one_hour = start_time + 60*60*1000
two_hour = start_time + 120*60*1000
g<-ggplot(d, aes(x=d$time, y=d$event)) + geom_point() + geom_vline(xintercept = one_hour,linetype=2) +
ggtitle(d[1,c('subject')])+
geom_vline(xintercept = two_hour, linetype=1) +
annotate("text", x = one_hour, y = 3.5, label = "60m") +
annotate("rect", xmin = one_hour-50, xmax = one_hour+50, ymin = 3.2, ymax = 3.8,alpha = .9) +
annotate("text", x = two_hour, y = 3.5, label = "120m") + xlab('Time') +
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())
return(g)
}
d_worker = split(d, d$subject)
slplots=lapply(d_worker, make_plot)
do.call('grid.arrange',c(slplots, ncol = 2))
setwd('~/gdrivezb9/rushhour/results/stage1/')
d=read.csv('trial_event_data.csv', header = TRUE, sep=',',stringsAsFactors=F)
d=subset(d, d$event != 'drag_start')
make_plot <- function (d){
start_time = d[1,c('time')]
one_hour = start_time + 60*60*1000
two_hour = start_time + 120*60*1000
g<-ggplot(d, aes(x=d$time, y=d$event)) + geom_point() + geom_vline(xintercept = one_hour,linetype=2) +
ggtitle(d[1,c('subject')])+
geom_vline(xintercept = two_hour, linetype=1) +
annotate("text", x = one_hour, y = 3.5, label = "60m") +
annotate("rect", xmin = one_hour-50, xmax = one_hour+50, ymin = 3.2, ymax = 3.8,alpha = .9) +
annotate("text", x = two_hour, y = 3.5, label = "120m") + xlab('Time') +
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())
return(g)
}
d_worker = split(d, d$subject)
slplots=lapply(d_worker, make_plot)
do.call('grid.arrange',c(slplots, ncol = 2))
