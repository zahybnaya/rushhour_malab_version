accuracy=seq(0:1, by=0.1)
accuracy=seq(from=0, to=1, by=0.1)
accuracy
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
accuracy=seq(0:1, by=0.1)
source('~/.active-rstudio-document')
ncol(z)
length(accuracy)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
runif(1)
runif(1)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
z
runif(1)
runif(1)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
z
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
z
source('~/.active-rstudio-document')
z
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
model =c('Opt','Heu','OptHist','HeuHist')
model =c('Opt','Heu','OptHist','HeuHist')
means=c(869.337552396539,806.679745593362,700.339714996251,693.859483677498)
lower=c(778.551252925229,720.938063161892,605.056665488222,602.104097553182)
upper=c(959.396537536969,891.911625545226,795.472920011309,790.585497439020)
d=data.frame(mode,means,lower,upper)
d=data.frame(model,means,lower,upper)
d
ggplot(d) + geom_bar()
library(ggplot2)
ggplot(d) + geom_bar()
model =c('Opt','Heu','OptHist','HeuHist')
mean=c(869.337552396539,806.679745593362,700.339714996251,693.859483677498)
lower=c(778.551252925229,720.938063161892,605.056665488222,602.104097553182)
upper=c(959.396537536969,891.911625545226,795.472920011309,790.585497439020)
d=data.frame(model,means,lower,upper)
ggplot(d) + geom_bar(aes(x=mean))
d=data.frame(model,means,lower,upper)
ggplot(d) + geom_bar(aes(x=mean, type='identity'))
ggplot(d) + geom_bar(aes(x=mean, stat='identity'))
d=data.frame(model,means,lower,upper)
ggplot(d) + geom_bar(aes(x=mean, stat ='identity'))
ggplot(d) + geom_bar(aes(x=mean), stat ='identity')
ggplot(d) + geom_bar(aes(x=mean), stat ='identity')
d
model =c('Opt','Heu','OptHist','HeuHist')
mean=c(869.337552396539,806.679745593362,700.339714996251,693.859483677498)
lower=c(778.551252925229,720.938063161892,605.056665488222,602.104097553182)
upper=c(959.396537536969,891.911625545226,795.472920011309,790.585497439020)
d=data.frame(model,means,lower,upper)
ggplot(d) + geom_bar(aes(x=mean), stat ='identity')
d
model =c('Opt','Heu','OptHist','HeuHist')
mean=c(869.337552396539,806.679745593362,700.339714996251,693.859483677498)
lower=c(778.551252925229,720.938063161892,605.056665488222,602.104097553182)
upper=c(959.396537536969,891.911625545226,795.472920011309,790.585497439020)
d=data.frame(model,mean,lower,upper)
ggplot(d) + geom_bar(aes(x=mean), stat ='identity')
d
ggplot(d) + geom_bar(aes(x=model), stat ='identity')
ggplot(d) + geom_bar(aes(x=model, y=mean), stat ='identity')
ggplot(d) + geom_bar(aes(x=model, y=mean), stat ='identity') + geom_errorbar()
ggplot(d) + geom_bar(aes(x=model, y=mean), stat ='identity') + geom_errorbar(aes(ymin=lower, ymax=upper))
ggplot(d) + geom_bar(aes(x=model, y=mean), stat ='identity') +
geom_errorbar(aes(ymin=lower, ymax=upper))
ggplot(d,aes(x=model)) + geom_bar(aes(y=mean), stat ='identity') +
geom_errorbar(aes(ymin=lower, ymax=upper))
ggplot(d,aes(x=model)) + geom_bar(aes(y=mean), stat ='identity') +
geom_errorbar(aes(ymin=lower, ymax=upper), width=2)
ggplot(d,aes(x=model)) + geom_bar(aes(y=mean), stat ='identity') +
geom_errorbar(aes(ymin=lower, ymax=upper), width=0.2)
ggplot(d,aes(x=model)) + geom_bar(aes(y=mean), color='white', stat ='identity') +
geom_errorbar(aes(ymin=lower, ymax=upper), width=0.2)
ggplot(d,aes(x=model)) + geom_bar(aes(y=mean), fill='white', stat ='identity') +
geom_errorbar(aes(ymin=lower, ymax=upper), width=0.2)
ggplot(d,aes(x=model)) + geom_bar(aes(y=mean), fill='white', line='black', stat ='identity') +
geom_errorbar(aes(ymin=lower, ymax=upper), width=0.2)
ggplot(d,aes(x=model)) + geom_bar(aes(y=mean), fill='white', color='black', stat ='identity') +
geom_errorbar(aes(ymin=lower, ymax=upper), width=0.2)
ggplot(d,aes(x=model)) + geom_bar(aes(y=mean), fill='white', color='black', stat ='identity') +
geom_errorbar(aes(ymin=lower, ymax=upper), width=0.2) + ylabel('AIC')
model =c('Opt','Heu','OptHist','HeuHist')
AIC=c(869.337552396539,806.679745593362,700.339714996251,693.859483677498)
lower=c(778.551252925229,720.938063161892,605.056665488222,602.104097553182)
upper=c(959.396537536969,891.911625545226,795.472920011309,790.585497439020)
d=data.frame(model,AIC,lower,upper)
ggplot(d,aes(x=model)) + geom_bar(aes(y=AIC), fill='white', color='black', stat ='identity') +
geom_errorbar(aes(ymin=lower, ymax=upper), width=0.2)
ggplot(d,aes(x=model)) + geom_bar(aes(y=AIC), fill='white', color='black', stat ='identity') +
geom_errorbar(aes(ymin=lower, ymax=upper), width=0.4)
library(ggplot2)
library(plyr)
library(gridExtra)
library(Cairo)
library(reshape2)
p=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4.csv', header = TRUE, sep=',',stringsAsFactors=F)
p=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4_plan.csv', header = TRUE, sep=',',stringsAsFactors=F)
p=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4_plan.csv', header = TRUE, sep=',',stringsAsFactors=F)
names(p)
i=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4.csv', header = TRUE, sep=',',stringsAsFactors=F)
names(i)
p=p[,c('instance','number_of_unsafe_moves')]
i=merge(i,p,by = 'instance')
names(i)
head(i)
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, paths$complete == 'True')
d=merge(paths,i,by = 'instance')
d$err <- (d$human_length-d$optimal_length)
d$err_norm <- (d$err)/d$optimal_length
d$err_ratio <- (d$human_length/d$optimal_length)
summary(lm(d$rt ~ d$avg_location_size))
summary(lm(d$rt ~ d$number_of_unsafe_moves)
summary(lm(d$rt ~ d$mag_nodes + d$avg_bf + d$mag_edges + d$avg_location_size + d$num_sccs + d$max_scc_size ))
summary(lm(d$err ~ d$mag_nodes + d$avg_bf + d$mag_edges + d$avg_location_size + d$num_sccs + d$max_scc_size ))
summary(lm(d$err_norm ~ d$mag_nodes + d$avg_bf + d$mag_edges + d$avg_location_size + d$num_sccs + d$max_scc_size ))
sl=split(d,as.factor(d$optimal_length))
f(sl$`7`,'avg_bf')
f(sl$`11`,'avg_bf')
f(sl$`14`,'avg_bf')
f(sl$`16`,'avg_bf')
f(sl$`7`,'mag_nodes')
f(sl$`11`,'mag_nodes')
f(sl$`14`,'mag_nodes')
f(sl$`16`,'mag_nodes')
f(sl$`7`,'mag_edges')
f(sl$`11`,'mag_edges')
f(sl$`14`,'mag_edges')
f(sl$`16`,'mag_edges')
f(sl$`7`,'avg_location_size')
f(sl$`11`,'avg_location_size')
f(sl$`14`,'avg_location_size')
f(sl$`16`,'avg_location_size')
f(sl$`7`,'max_scc_size')
f(sl$`11`,'max_scc_size')
f(sl$`14`,'max_scc_size')
f(sl$`16`,'max_scc_size')
f(sl$`7`,'num_sccs')
f(sl$`11`,'num_sccs')
f(sl$`14`,'num_sccs')
f(sl$`16`,'num_sccs')
#######################################
##  Plot 4: Correlation matrix. Show relationship between instances and perofrmance.
######################################
i=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4.csv', header = TRUE, sep=',',stringsAsFactors=F)
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, paths$complete == 'True')
d=merge(paths,i,by = 'instance')
d$err_norm <- (d$human_length-d$optimal_length)/d$optimal_length
d$err <- (d$human_length-d$optimal_length)
d=d[,c('optimal_length','human_length','rt','err','err_norm','v_size', 'mag_nodes',
'mag_edges','path_length','num_sccs','max_scc_size','avg_bf','avg_location_size')]
cormat=round(cor(d,method = "spearman"),3)
library('reshape2')
melted=melt(cormat)
melted=subset(melted, melted$Var2 %in% c('err','err_norm','rt'))
ggplot(melted, aes(x=melted$Var1, y=melted$Var2, fill=melted$value)) + geom_tile()+ geom_text(label = melted$value)
#################################################
##  stat 5: p.values and corelation coefficients.
#################################################
i=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4.csv', header = TRUE, sep=',',stringsAsFactors=F)
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, paths$complete == 'True')
d=merge(paths,i,by = 'instance')
d$err_norm <- (d$human_length-d$optimal_length)/d$optimal_length
d$err <- (d$human_length-d$optimal_length)
factors<-c('v_size', 'mag_nodes','mag_edges','num_sccs','max_scc_size','avg_bf','avg_location_size')
responses<-c('optimal_length','human_length','rt','err','err_norm')
k=expand.grid(factors,responses)
k$pval=apply(k,1,function(x){cor.test(d[,x[1]],d[,x[2]], method = "spearman", alternative = "two.sided")$p.value})
k$estimate=apply(k,1,function(x){cor.test(d[,x[1]],d[,x[2]], method = "spearman", alternative = "two.sided")$estimate})
######
## Plot 2.2: Bar Plot of instances human length.
#######
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, complete=='True')
#paths=subset(paths, subject=='A191V7PT3DQKDP:3PMBY0YE28B43VMUKKJ6EDF85RV9C8')
paths$instance=factor(paths$instance, levels = lvls_sl, labels = 1:length(lvls_e))
g<-ggplot(paths, aes(x = paths$instance)) +
stat_summary(geom='bar', aes(y=paths$human_length), fun.y = 'mean', fill='wheat4')+
stat_summary(geom='bar', aes(y=paths$optimal_length+1), fun.y = 'mean', fill='black')+
stat_summary(geom='errorbar', aes(y=paths$human_length), fun.data = mean_sem, width=0.4)+
xlab('puzzle') + ylab('#moves') + theme(text = element_text(size=20))
g
Cairo(file=paste(figpath,"/p2_2c.png",sep=''),
type="png",
units="px",
width=1124,
height=320,
pointsize=12*2,
dpi=72*2)
g
dev.off()
######
## Plot 2.3: Bar Plot of instances human length per subject.
#######
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, complete=='True')
paths=subset(paths, subject=='A191V7PT3DQKDP:3PMBY0YE28B43VMUKKJ6EDF85RV9C8')
paths$instance=factor(paths$instance, levels = lvls_e, labels = 1:length(lvls_e))
g<-ggplot(paths, aes(x = paths$instance)) +
stat_summary(geom='bar', aes(y=paths$human_length), fun.y = 'mean', fill='wheat4')+
stat_summary(geom='bar', aes(y=paths$optimal_length+1), fun.y = 'mean', fill='black')+
stat_summary(geom='errorbar', aes(y=paths$human_length), fun.data = mean_sem, width=0.4)+
xlab('puzzle') + ylab('#moves') + theme(text = element_text(size=20))
g
dev.off()
####################
# Plot 3: scatter plot of response-time as move number, by subject
# per path
####################
moves=read.csv('moves.csv', header = TRUE, sep=',',stringsAsFactors=F)
moves=subset(moves, moves$move_number<150)
ggplot(moves, aes(x=moves$move_number)) + geom_point(aes(y=moves$rt, color=subject)) +
scale_color_manual(values=1:34, guide=FALSE)+
ggtitle("Response Times") + xlab('move number') + ylab('Seconds') + ylim(0,90)
###################
# Plot 3.1: scatter plot of response-time as move number, by subject
###################
moves=read.csv('moves.csv', header = TRUE, sep=',',stringsAsFactors=F)
g<-ggplot(moves, aes(x=moves$move_number)) + geom_point(aes(y=moves$rt)) +
xlab('move number') + ylab('seconds') + ylim(0,90) +
theme(text = element_text(size=18))
Cairo(file=paste(figpath,"/p3_1.png",sep=''),
type="png",
units="px",
width=770,
height=350,
pointsize=12*2,
dpi=72*2)
g
dev.off()
####################
#  Plot 3.2: Spearman correlations of RT and move#
####################
require(plyr)
cor_move_rt <- function(xx)
{
return(data.frame(COR = cor(xx$move_number, xx$rt, method = "spearman")))
}
cor_dist_rt <- function(xx)
{
return(data.frame(COR = cor(xx$distance_to_goal, xx$rt, method = "spearman")))
}
moves=read.csv('moves.csv', header = TRUE, sep=',',stringsAsFactors=F)
d=ddply(moves, .(subject), cor_dist_rt)
d$type='distance to goal'
d1=ddply(moves, .(subject), cor_move_rt)
d1$type='move#'
d2=rbind(d,d1)
cors=ddply(d2,.(type), function(x){return(mean_sem(x$COR))})
cors$sem=(cors$ymax-cors$ymin)/2
ggplot(d2, aes(x=type, y=COR)) + stat_summary(geom = 'bar', fun.data = mean_sem) +
stat_summary(geom = "errorbar", fun.data = mean_sem, width=0.22)
###
# Plot 3.4: line plot of response-time as move number, by subject
# per path
###
do_plot<-function(moves) {
g<-ggplot(moves, aes(x=moves$move_number)) + geom_line(aes(y=moves$rt)) +
scale_color_manual(values=1:11, guide=FALSE) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
#panel.background=element_blank(),
#panel.border=element_blank(),
#panel.grid.major=element_blank(),
panel.grid.minor=element_blank()
#plot.background=element_blank()
)
return(g)
}
k<-burst_analysis(function(x){return(mean(x))},spearman_corr,1000)
hbursts=head(k[order(k$diff,decreasing = T),c('path')], 100)
moves=read.csv('moves.c.csv', header = TRUE, sep=',',stringsAsFactors=F)
moves$path<-paste(moves$subject,moves$instance,moves$trial_number,sep='_')
#moves=subset(moves, moves$path in hbursts)
moves_sp=split(moves, moves$path)
moves_sp=tail(moves_sp, n = 100)
slplots<-lapply(moves_sp,do_plot)
do.call('grid.arrange',c(slplots, ncol = 5))
summary(lm(d$rt ~ d$number_of_unsafe_moves))
i=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4.csv', header = TRUE, sep=',',stringsAsFactors=F)
p=read.csv('~/gdrivezb9/rushhour/results/instances/instances_selected_set4_plan.csv', header = TRUE, sep=',',stringsAsFactors=F)
p=p[,c('instance','number_of_unsafe_moves')]
i=merge(i,p,by = 'instance')
setwd("~/gdrivezb9/rushhour/results/all_stages")
paths=read.csv('paths.csv', header = TRUE, sep=',',stringsAsFactors=F)
paths=subset(paths, paths$complete == 'True')
d=merge(paths,i,by = 'instance')
d$err <- (d$human_length-d$optimal_length)
d$err_norm <- (d$err)/d$optimal_length
d$err_ratio <- (d$human_length/d$optimal_length)
summary(lm(d$rt ~ d$number_of_unsafe_moves))
f<-function(d,name){
g1<-ggplot(d, aes_string(x=name, y=d$err)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem) + ggtitle('err') + ylab('')
g2<-ggplot(d, aes_string(x=name, y=d$err_norm)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)+ ggtitle('err_norm')+ ylab('')
g3<-ggplot(d, aes_string(x=name, y=d$err_ratio)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)+ ggtitle('err_ratio')+ ylab('')
g4<-ggplot(d, aes_string(x=name, y=d$rt)) + geom_point() + stat_smooth(method = 'lm') + stat_summary(color='red', fun.data = mean_sem)+ ggtitle('rt')+ ylab('')
grid.arrange(g1,g2,g3,g4)
}
sl=split(d,as.factor(d$optimal_length))
names(d)
f(sl$`7`,'number_of_unsafe_moves')
sl=split(d,as.factor(d$optimal_length))
f(sl$`7`,'number_of_unsafe_moves')
mean_sem <- function(x) {
meanx=mean(x)
sem=sd(x)/sqrt(length(x))
return(data.frame("y"=meanx, "ymin"=meanx-sem/2, "ymax"=meanx+sem/2))
}
mean_sem_ <- function(x) {
meanx=mean(x)
sem=sd(x)/sqrt(length(x))
return(data.frame("mean"=meanx, "sem"=sem/2))
}
f(sl$`7`,'number_of_unsafe_moves')
f(sl$`11`,'number_of_unsafe_moves')
f(sl$`14`,'number_of_unsafe_moves')
f(sl$`16`,'number_of_unsafe_moves')
summary(lm(d$rt ~ d$number_of_unsafe_moves))
summary(lm(d$err ~ d$number_of_unsafe_moves))
summary(lm(d$rt ~ d$number_of_unsafe_moves))
summary(lm(d$err_norm ~ d$number_of_unsafe_moves))
summary(lm(d$err_ratio ~ d$number_of_unsafe_moves))
summary(lm(d$err ~ d$number_of_unsafe_moves))
summary(lm(d$rt ~ d$number_of_unsafe_moves))
summary(lm(d$err ~ d$number_of_unsafe_moves))
plot(d$number_of_unsafe_moves)
hist(d$number_of_unsafe_moves)
sl=split(d,as.factor(d$optimal_length))
k=sl$`7`
summary(lm(k$err ~ k$number_of_unsafe_moves))
summary(lm(k$rt ~ k$number_of_unsafe_moves))
summary(lm(k$err_norm ~ k$number_of_unsafe_moves))
summary(lm(k$err_ratio ~ k$number_of_unsafe_moves))
k=sl$`11`
summary(lm(k$err ~ k$number_of_unsafe_moves))
summary(lm(k$rt ~ k$number_of_unsafe_moves))
summary(lm(k$err_norm ~ k$number_of_unsafe_moves))
summary(lm(k$err_ratio ~ k$number_of_unsafe_moves))
k=sl$`14`
summary(lm(k$err ~ k$number_of_unsafe_moves))
summary(lm(k$rt ~ k$number_of_unsafe_moves))
summary(lm(k$err_norm ~ k$number_of_unsafe_moves))
summary(lm(k$err_ratio ~ k$number_of_unsafe_moves))
k=sl$`16`
summary(lm(k$err ~ k$number_of_unsafe_moves))
summary(lm(k$rt ~ k$number_of_unsafe_moves))
summary(lm(k$err_norm ~ k$number_of_unsafe_moves))
summary(lm(k$err_ratio ~ k$number_of_unsafe_moves))
summary(lm(d$err ~ d$number_of_unsafe_moves))
summary(lm(d$rt ~ d$number_of_unsafe_moves))
summary(lm(d$err_norm ~ d$number_of_unsafe_moves))
summary(lm(d$err_ratio ~ d$number_of_unsafe_moves))
d$number_of_unsafe_moves > 0
ifelse(d$number_of_unsafe_moves > 0,1,0)
d$unsafe<-ifelse(d$number_of_unsafe_moves > 0,1,0)
summary(lm(d$err ~ d$unsafe))
summary(lm(d$rt ~ d$unsafe))
summary(lm(d$err_norm ~ d$unsafe))
summary(lm(d$err_ratio ~ d$unsafe))
summary(lm(d$err ~ d$number_of_unsafe_moves))
summary(lm(d$err ~ d$number_of_unsafe_moves + d$mag_nodes + d$mag_edges))
summary(lm(d$err ~ d$number_of_unsafe_moves + d$mag_nodes + d$mag_edges + d$avg_location_size + d$avg_bf))
summary(lm(d$err ~ d$number_of_unsafe_moves + d$mag_nodes + d$mag_edges + d$avg_location_size + d$avg_bf + d$max_scc_size + d$num_sccs))
summary(lm(d$err ~ d$number_of_unsafe_moves +
d$mag_nodes + d$mag_edges + d$avg_location_size +
d$avg_bf + d$max_scc_size + d$num_sccs ))
library(ggplot2)
library(plyr)
library(gridExtra)
library(Cairo)
library(reshape2)
setwd('~/gdrivezb9/rushhour/results/stage8/')
d=read.csv('trial_event_data.csv', header = TRUE, sep=',',stringsAsFactors=F)
d=subset(d, d$event != 'drag_start')
make_plot <- function (d){
start_time = d[1,c('time')]
one_hour = start_time + 60*60*1000
two_hour = start_time + 120*60*1000
g<-ggplot(d, aes(x=d$time, y=d$event)) + geom_point() + geom_vline(xintercept = one_hour,linetype=2) +
ggtitle(d[1,c('subject')])+
geom_vline(xintercept = two_hour, linetype=1) +
annotate("text", x = one_hour, y = 3.5, label = "60m") +
annotate("rect", xmin = one_hour-50, xmax = one_hour+50, ymin = 3.2, ymax = 3.8,alpha = .9) +
annotate("text", x = two_hour, y = 3.5, label = "120m") + xlab('Time') +
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())
return(g)
}
d_worker = split(d, d$subject)
slplots=lapply(d_worker, make_plot)
do.call('grid.arrange',c(slplots, ncol = 3))
setwd('~/gdrivezb9/rushhour/results/stage8/')
setwd('~/gdrivezb9/rushhour/results/stage8/')
d=read.csv('trial_event_data.csv', header = TRUE, sep=',',stringsAsFactors=F)
d=subset(d, d$event != 'drag_start')
make_plot <- function (d){
start_time = d[1,c('time')]
one_hour = start_time + 60*60*1000
two_hour = start_time + 120*60*1000
g<-ggplot(d, aes(x=d$time, y=d$event)) + geom_point() + geom_vline(xintercept = one_hour,linetype=2) +
ggtitle(d[1,c('subject')])+
geom_vline(xintercept = two_hour, linetype=1) +
annotate("text", x = one_hour, y = 3.5, label = "60m") +
annotate("rect", xmin = one_hour-50, xmax = one_hour+50, ymin = 3.2, ymax = 3.8,alpha = .9) +
annotate("text", x = two_hour, y = 3.5, label = "120m") + xlab('Time') +
theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())
return(g)
}
d_worker = split(d, d$subject)
d_worker = split(d, d$subject)
slplots=lapply(d_worker, make_plot)
do.call('grid.arrange',c(slplots, ncol = 2))
setwd('~/gdrivezb9/rushhour/results/stage8/')
d=read.csv('trial_event_data.csv', header = TRUE, sep=',',stringsAsFactors=F)
d=subset(d, d$event != 'drag_start')
wins=ddply(d, .(subject), function(x){return(length(unique(x[which(x$event=='win'),c('instance')])))})
names(wins)<-c('subject','solved')
surrenders=ddply(d, .(subject), function(x){return(length(unique(x[which(x$event=='surrender'),c('instance')])))})
names(surrenders)<-c('subject','surrendered')
fun<-function(x){
df=data.frame(nrow(x[which(x$event=='BONUS_FAIL'),]),nrow(x[which(x$event=='BONUS_SUCCESS'),]))
names(df)<-c('BONUS_FAIL','BONUS_SUCCESS')
return(df)
}
bonuses=ddply(d, .(subject), fun)
commands=ddply(d, .(subject), function(x){return(paste('worker approve',x$assignmentid[1]))})
names(commands)<-c('subject','approve_command')
elig=merge(merge(merge(bonuses,wins),surrenders),commands)
elig$puzzles=elig$solved+elig$surrendered
elig[elig$subject == 'A21LB023L14XC1',]
make_plot(subset(d, d$subject == 'A21LB023L14XC1'))
